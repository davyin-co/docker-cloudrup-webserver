name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        required: true
        default: 'blabla...'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         - tag: 7.1
           Dockerfile: "7.1/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.1"
         - tag: 7.2
           Dockerfile: "7.2/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.2"
         - tag: 7.3
           Dockerfile: "7.3/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.3"
         - tag: 7.4
           Dockerfile: "7.4/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.4"
         - tag: 8.0
           Dockerfile: "8.0/Dockerfile"
           image: "davyinsa/cloudrup-webserver:8.0"
         - tag: 8.1
           Dockerfile: "8.1/Dockerfile"
           image: "davyinsa/cloudrup-webserver:8.1"
         - tag: 7.1
           Dockerfile: "7.1/oci8/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.1-oci8"
         - tag: 7.2
           Dockerfile: "7.2/oci8/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.2-oci8"
         - tag: 7.3
           Dockerfile: "7.3/oci8/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.3-oci8"
         - tag: 7.4
           Dockerfile: "7.4/oci8/Dockerfile"
           image: "davyinsa/cloudrup-webserver:7.4-oci8"
    steps:
    - uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    -
      name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        platforms: linux/amd64,linux/arm64
        file: ${{ matrix.Dockerfile }}
        tags: ${{ matrix.image }}
